//
//  Contact.swift
//  Horizon
//
//  Created by Jürgen on 02.11.17.
//  Copyright © 2017 Semantical GmbH & Co. KG. All rights reserved.
//

import Foundation

/**
 A `Contact` represents a single remote user with which files
 can be shared.
 */
struct Contact: Codable {

    // MARK: - Properties

    /**
     A unique identifier for the contact.
     */
    let identifier: UUID

    /**
     The user visible name, which is displayed in the UI.
     */
    let displayName: String

    /**
     The name for an IPNS keypair on the local machine. Via the IPFS
     API, IPNS keypairs are manipulated using a human readable name.
     */
    let sendListKey: String

    /**
     The IPNS hash for the remote file list. This must be provided
     by the other user.
     */
    let receiveListHash: String

    /**
     The list of files which are to be shared with the contact.
     */
    var sendList = FileList(hash: nil, files: [])

    /**
     The last known file list from the contact.
     */
    var receiveList = FileList(hash: nil, files: [])

    // MARK: - Initializer

    /**
     Initializes a new contact. A newly initialized contact will have
     both empty send and receive file lists.

     - parameter identifier: An identifier for the contact. This should
       be generated by the calling function.
     - parameter displayName: he user visible name, which is displayed
       in the UI.
     - parameter sendListKey: A string which corresponds to an IPNS
       keypair on the local machine.
     - parameter receiveListHash: An IPNS hash provided by the contact,
       through which their current list of shared files can be resolved.
     */
    init(identifier: UUID, displayName: String, sendListKey: String, receiveListHash: String) {
        self.identifier = identifier
        self.displayName = displayName
        self.sendListKey = sendListKey
        self.receiveListHash = receiveListHash
    }

}
